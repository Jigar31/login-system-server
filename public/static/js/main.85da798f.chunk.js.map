{"version":3,"sources":["components/Login.js","components/UserForm.js","components/Signup.js","components/Profile.js","App.js","reportWebVitals.js","components/reducer/reducer.js","index.js"],"names":["Login","props","useState","username","setUsername","password","setPassword","isError","setError","localStorage","removeItem","submitHandler","e","a","preventDefault","axios","post","response","userId","data","setItem","history","push","console","error","className","onSubmit","TextField","id","label","variant","type","onChange","target","value","Button","color","onClick","connect","state","user","dispatch","updateUser","payload","firstname","setFirstname","lastname","setLastname","age","setAge","phone","setPhone","addressLine1","addressLine2","city","pincode","address","setAddress","profilePicture","setProfilePicture","profilePictureVersion","setProfilePictureVersion","isFormIncomplete","setFormIncomplete","formValidationMessage","setFormValidationMessage","image","setImage","file","setFile","useHistory","userImage","setEdit","setProfileImage","isSignup","getItem","useEffect","log","patch","updatedUser","JSON","parse","config","get","responseType","imageResponse","URL","createObjectURL","onFileUpload","formData","FormData","append","name","filename","setAddressFields","htmlFor","style","display","event","files","Avatar","src","height","width","size","inputMode","Signup","ownProps","edit","fetchUser","_id","App","path","component","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","newState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAkFeA,MA3Ef,SAAeC,GAAQ,IAAD,EACYC,mBAAS,IADrB,mBACbC,EADa,KACHC,EADG,OAEYF,mBAAS,IAFrB,mBAEbG,EAFa,KAEHC,EAFG,OAGQJ,oBAAS,GAHjB,mBAGbK,EAHa,KAGJC,EAHI,KAKpBC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UAExB,IAAMC,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACpBD,EAAEE,iBACFN,GAAS,GAFW,kBAIGO,IAAMC,KAAK,YAAa,CAC3Cb,WACAE,aANgB,OAIdY,EAJc,OAQZC,EAAWD,EAASE,KAApBD,OACNT,aAAaW,QAAQ,SAAUF,GAC/BjB,EAAMoB,QAAQC,KAAK,SAVD,kDAYlBC,QAAQC,MAAR,MACAhB,GAAS,GAbS,0DAAH,sDAiBnB,OACE,sBAAKiB,UAAU,kBAAf,UACE,oBAAIA,UAAU,UAAd,mBACClB,GACC,qBAAKkB,UAAU,oBAAf,0CAEF,uBAAMA,UAAU,aAAaC,SAAU,SAACd,GAAD,OAAOD,EAAcC,IAA5D,UACE,qBAAKa,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLC,SAAU,SAACpB,GACTR,EAAYQ,EAAEqB,OAAOC,YAI3B,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLC,SAAU,SAACpB,GACTN,EAAYM,EAAEqB,OAAOC,YAI3B,qBAAKT,UAAU,cAAf,SACE,cAACU,EAAA,EAAD,CAAQL,QAAQ,YAAYM,MAAM,UAAUL,KAAK,SAAjD,wBAKJ,sBAAKN,UAAU,eAAf,UACE,qDACA,sBACEA,UAAU,OACVY,QAAS,WACPpC,EAAMoB,QAAQC,KAAK,YAHvB,2B,yCCgSR,IAYegB,eAZS,SAACC,GACvB,MAAO,CACLC,KAAMD,MAIiB,SAACE,GAC1B,MAAO,CACLC,WAAY,SAACF,GAAD,OAAUC,EAAS,CAAEV,KAAM,cAAeY,QAASH,QAIpDF,EAzWf,SAAkBrC,GAAQ,IAAD,EACSC,mBAAS,IADlB,mBAChBC,EADgB,KACNC,EADM,OAESF,mBAAS,IAFlB,mBAEhBG,EAFgB,KAENC,EAFM,OAGWJ,mBAAS,IAHpB,mBAGhB0C,EAHgB,KAGLC,EAHK,OAIS3C,mBAAS,IAJlB,mBAIhB4C,EAJgB,KAINC,EAJM,OAKD7C,mBAAS,IALR,mBAKhB8C,EALgB,KAKXC,EALW,OAMG/C,mBAAS,IANZ,mBAMhBgD,EANgB,KAMTC,EANS,OAOOjD,mBAAS,CACrCkD,aAAc,GACdC,aAAc,GACdC,KAAM,GACNf,MAAO,GACPgB,QAAS,KAZY,mBAOhBC,EAPgB,KAOPC,EAPO,OAcqBvD,mBAAS,IAd9B,mBAchBwD,EAdgB,KAcAC,EAdA,OAemCzD,mBAAS,GAf5C,mBAehB0D,EAfgB,KAeOC,EAfP,OAiBK3D,oBAAS,GAjBd,mBAiBhBK,EAjBgB,KAiBPC,EAjBO,OAkBuBN,oBAAS,GAlBhC,oBAkBhB4D,GAlBgB,MAkBEC,GAlBF,SAmBmC7D,mBAAS,IAnB5C,qBAmBhB8D,GAnBgB,MAmBOC,GAnBP,SAoBG/D,mBAAS,MApBZ,qBAoBhBgE,GApBgB,MAoBTC,GApBS,SAsBCjE,mBAAS,MAtBV,qBAsBhBkE,GAtBgB,MAsBVC,GAtBU,MAuBjBhD,GAAUiD,cAER9B,GAAwDvC,EAAxDuC,KAAM+B,GAAkDtE,EAAlDsE,UAAWC,GAAuCvE,EAAvCuE,QAASC,GAA8BxE,EAA9BwE,gBAAiBC,GAAazE,EAAbyE,SAC/CxD,GAAST,aAAakE,QAAQ,UAElCC,qBAAU,WACJL,IACFJ,GAASI,IAGNG,KACHtE,EAAYoC,GAAKrC,UACjBG,EAAYkC,GAAKnC,UACjBwC,EAAaL,GAAKI,WAClBG,EAAYP,GAAKM,UACjBG,EAAOT,GAAKQ,KACZG,EAASX,GAAKU,OACdS,EAAkBnB,GAAKkB,gBACvBG,EAAyBrB,GAAKoB,uBAC9BH,EAAW,CACTL,aAAcZ,GAAKgB,QAAQJ,aAC3BC,aAAcb,GAAKgB,QAAQH,aAC3BC,KAAMd,GAAKgB,QAAQF,KACnBf,MAAOC,GAAKgB,QAAQjB,MACpBgB,QAASf,GAAKgB,QAAQD,aAGzB,IAEH,IAAM5C,GAAa,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACpBD,EAAEE,iBACFN,GAAS,GACTuD,IAAkB,GAHE,SAMH,KAAb5D,GACc,KAAdyC,GACa,KAAbE,GACQ,KAARE,GACU,KAAVE,GACmB,KAAnBQ,EAXgB,qBAaZgB,GAbY,iCAcR3D,IAAMC,KAAK,aAAc,CAC7Bb,WACAE,WACAuC,YACAE,WACAE,MACAE,QACAM,UACAE,iBACAE,0BAvBY,OAyBdvC,GAAQC,KAAK,UAzBC,+BA2BdC,QAAQsD,IAAI,UA3BE,UA4BO9D,IAAM+D,MAAM,WAAY,CAC3C5D,UACAf,WACAE,WACAuC,YACAE,WACAE,MACAE,QACAM,UACAE,iBACAE,0BAtCY,eA4BV3C,EA5BU,OAwCdM,QAAQsD,IAAI5D,GACR8D,EAAcC,KAAKC,MAAMhE,EAASiE,OAAO/D,MAG7ClB,EAAMyC,WAAWqC,GA5CH,UA8CYhE,IAAMoE,IAAN,oBACXJ,EAAY7D,OADD,YACW6D,EAAYnB,sBADvB,YACgDmB,EAAYrB,gBACpF,CAAE0B,aAAc,SAhDJ,QA8CVC,EA9CU,OAkDdZ,GAAgBa,IAAIC,gBAAgBF,EAAclE,OAClDqD,IAAQ,GACRnD,GAAQC,KAAK,SApDC,gCAuDhByC,IAAkB,GAClBE,GACE,qDAzDc,0DA6DlB1C,QAAQC,MAAR,MACAhB,GAAS,GA9DS,0DAAH,sDAkEbgF,GAAY,uCAAG,8BAAA3E,EAAA,yDAEb4E,EAAW,IAAIC,SAErBnE,QAAQsD,IAAI,QAAST,KAEjBA,GANe,uBAQjBqB,EAASE,OAAO,iBAAkBvB,GAAMA,GAAKwB,MAR5B,SAYI7E,IAAMC,KAAK,4BAA6ByE,GAZ5C,OAYbxE,EAZa,OAajB0C,EAAkB1C,EAASE,KAAK0E,UAChCtE,QAAQsD,IAAI,kBAAmBnB,GAdd,2CAAH,qDA0BZoC,GAAmB,SAAClF,GACxB6C,EAAW,2BAAKD,GAAN,kBAAgB5C,EAAEqB,OAAO2D,KAAOhF,EAAEqB,OAAOC,UAGrD,OACE,gCACG3B,GACC,qBAAKkB,UAAU,oBAAf,sCAEDqC,IACC,qBAAKrC,UAAU,oBAAf,SAAoCuC,KAEtC,uBAAMvC,UAAU,cAAhB,UACE,sBAAKA,UAAU,4BAAf,UACE,wBAAOsE,QAAQ,kBAAf,UACE,uBACEnE,GAAG,kBACHoE,MAAO,CAAEC,QAAS,QAClBlE,KAAK,OACLC,SA1BS,SAACkE,GAEpB3E,QAAQsD,IAAI,gBACZR,GAAQ6B,EAAMjE,OAAOkE,MAAM,IAC3BhC,GAASmB,IAAIC,gBAAgBW,EAAMjE,OAAOkE,MAAM,QAyBxC,cAACC,EAAA,EAAD,CACEC,IAAKnC,GACL8B,MAAO,CAAEM,OAAQ,QAASC,MAAO,cAGrC,uBAEA,cAACpE,EAAA,EAAD,CACEqE,KAAK,QACL1E,QAAQ,YACRM,MAAM,UACNL,KAAK,SACLM,QAASmD,GALX,6BAUF,sBAAK/D,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLG,MAAO/B,EACP6B,SAAU,SAACpB,GACTR,EAAYQ,EAAEqB,OAAOC,YAI3B,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLC,SAAU,SAACpB,GACTN,EAAYM,EAAEqB,OAAOC,YAK3B,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,YACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,OACLG,MAAOU,EACPZ,SAAU,SAACpB,GACTiC,EAAajC,EAAEqB,OAAOC,YAK5B,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLG,MAAOY,EACPd,SAAU,SAACpB,GACTmC,EAAYnC,EAAEqB,OAAOC,YAK3B,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,MACHC,MAAM,MACNC,QAAQ,WACR2E,UAAU,UACVvE,MAAOc,EACPhB,SAAU,SAACpB,GACTqC,EAAOrC,EAAEqB,OAAOC,YAKtB,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,QACNC,QAAQ,WACR2E,UAAU,UACVvE,MAAOgB,EACPlB,SAAU,SAACpB,GACTuC,EAASvC,EAAEqB,OAAOC,YAKxB,qBAAKT,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,eACHgE,KAAK,eACL/D,MAAM,eACNC,QAAQ,WACRC,KAAK,OACLG,MAAOsB,EAAQJ,aACfpB,SAAU,SAACpB,GACTkF,GAAiBlF,QAKvB,qBAAKa,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,eACHgE,KAAK,eACL/D,MAAM,eACNC,QAAQ,WACRC,KAAK,OACLG,MAAOsB,EAAQH,aACfrB,SAAU,SAACpB,GACTkF,GAAiBlF,QAKvB,qBAAKa,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,OACHgE,KAAK,OACL/D,MAAM,OACNC,QAAQ,WACRC,KAAK,OACLG,MAAOsB,EAAQF,KACftB,SAAU,SAACpB,GACTkF,GAAiBlF,QAKvB,qBAAKa,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,QACHgE,KAAK,QACL/D,MAAM,QACNC,QAAQ,WACRC,KAAK,OACLG,MAAOsB,EAAQjB,MACfP,SAAU,SAACpB,GACTkF,GAAiBlF,QAKvB,qBAAKa,UAAU,aAAf,SACE,cAACE,EAAA,EAAD,CACEC,GAAG,UACHgE,KAAK,UACL/D,MAAM,UACNC,QAAQ,WACRC,KAAK,OACLG,MAAOsB,EAAQD,QACfvB,SAAU,SAACpB,GACTkF,GAAiBlF,WAKzB,qBAAKa,UAAU,iBAAf,SACE,qBAAKA,UAAU,cAAf,SACE,eAACU,EAAA,EAAD,CACEqE,KAAK,QACL1E,QAAQ,YACRM,MAAM,UACNL,KAAK,SACLM,QAAS1B,GALX,UAOG+D,IAAY,UACXA,IAAY,yBCnUbgC,MApBf,SAAgBzG,GACd,OACE,sBAAKwB,UAAU,6BAAf,UACE,oBAAIA,UAAU,UAAd,oBACA,+DAEE,sBACEA,UAAU,OACVY,QAAS,WACPpC,EAAMoB,QAAQC,KAAK,WAHvB,sBASF,cAAC,EAAD,CAAUoD,UAAU,QCyF1B,IAcepC,eAdS,SAACC,GACvB,MAAO,CACLC,KAAMD,MAIiB,SAACE,EAAUkE,GACpC,MAAO,CACLjE,WAAY,SAACF,GACX,OAAOC,EAAS,CAAEV,KAAM,cAAeY,QAASH,QAKvCF,EArHf,SAAiBrC,GACf,IAAIiB,EAAST,aAAakE,QAAQ,UAE1BnC,EAAqBvC,EAArBuC,KAAME,EAAezC,EAAfyC,WAHQ,EAIIxC,mBAAS,MAJb,mBAIfgE,EAJe,KAIRC,EAJQ,OAKEjE,oBAAS,GALX,mBAKf0G,EALe,KAKTpC,EALS,KAOtBI,qBAAU,WACRiC,MACC,IAEH,IAAMA,EAAS,uCAAG,8BAAAhG,EAAA,0DACZK,EADY,iCAEOH,IAAMoE,IAAN,oBAAuBjE,IAF9B,cAEVD,EAFU,OAGdM,QAAQsD,IAAI5D,EAASE,MACrBuB,EAAWzB,EAASE,MAJN,SAMYJ,IAAMoE,IAAN,oBACXlE,EAASE,KAAK2F,IADH,YACU7F,EAASE,KAAKyC,sBADxB,YACiD3C,EAASE,KAAKuC,gBACvF,CAAE0B,aAAc,SARJ,OAMVC,EANU,OAUdlB,EAASmB,IAAIC,gBAAgBF,EAAclE,OAV7B,4CAAH,qDAcf,OAAKD,EAKD,sBAAKO,UAAU,8BAAf,UACE,oBAAIA,UAAU,UAAd,sBACEmF,GACA,sBACEnF,UAAU,YACVY,QAAS,WACPmC,GAAQ,IAHZ,0BASF,sBACE/C,UAAU,cACVY,QAAS,WACP5B,aAAaC,WAAW,UACxBT,EAAMoB,QAAQC,KAAK,WAJvB,qBASEsF,GACA,sBAAKnF,UAAU,eAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC2E,EAAA,EAAD,CACEC,IAAKnC,EACL8B,MAAO,CAAEM,OAAQ,QAASC,MAAO,aAGrC,sBAAK9E,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOsE,QAAQ,WAAf,uBACA,mBAAGnE,GAAG,WAAN,SAAkBY,EAAKrC,cAEzB,sBAAKsB,UAAU,YAAf,UACE,uBAAOsE,QAAQ,YAAf,wBACA,mBAAGnE,GAAG,YAAN,SAAmBY,EAAKI,eAE1B,sBAAKnB,UAAU,WAAf,UACE,uBAAOsE,QAAQ,WAAf,uBACA,mBAAGnE,GAAG,WAAN,SAAkBY,EAAKM,cAEzB,sBAAKrB,UAAU,MAAf,UACE,uBAAOsE,QAAQ,MAAf,kBACA,mBAAGnE,GAAG,MAAN,SAAaY,EAAKQ,SAEpB,sBAAKvB,UAAU,QAAf,UACE,uBAAOsE,QAAQ,QAAf,oBACA,mBAAGnE,GAAG,QAAN,SAAeY,EAAKU,WAEtB,sBAAKzB,UAAU,UAAf,UACE,uBAAOsE,QAAQ,UAAf,sBACA,mBAAGnE,GAAG,UAAN,SACGY,EAAKgB,SAAL,UACIhB,EAAKgB,QAAQJ,aADjB,aACkCZ,EAAKgB,QAAQH,aAD/C,aACgEb,EAAKgB,QAAQF,KAD7E,aACsFd,EAAKgB,QAAQjB,MADnG,uBACuHC,EAAKgB,QAAQD,oBAM9IqD,GACC,cAAC,EAAD,CACEpE,KAAMA,EACN+B,UAAWL,EACXM,QAASA,EACTC,gBAAiBN,QArEzBlE,EAAMoB,QAAQC,KAAK,UACZ,S,QCXIyF,MAff,WACE,OACE,qBAAKtF,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,KAAK,SAASC,UAAWjH,IAChC,cAAC,IAAD,CAAOgH,KAAK,UAAUC,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWC,IAC/B,cAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWjH,YCHtBmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAe,CACnB1G,OAAQ,GACRf,SAAU,GACVyC,UAAW,GACXE,SAAU,GACVE,IAAK,GACLE,MAAO,GACPM,QAAS,CACPJ,aAAc,GACdC,aAAc,GACdC,KAAM,GACNf,MAAO,GACPgB,QAAS,IAEXG,eAAgB,GAChBE,sBAAuB,IAaViE,EAVC,WAAmC,IAAlCtF,EAAiC,uDAAzBqF,EAAcE,EAAW,uCAC5CC,EAAQ,eAAQxF,GAMpB,MAJoB,gBAAhBuF,EAAO/F,OACTgG,EAAWD,EAAOnF,SAGboF,GCdHC,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BnB,K","file":"static/js/main.85da798f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\n\nimport \"./css/main.css\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isError, setError] = useState(false);\n\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setError(false);\n    try {\n      let response = await axios.post(\"api/login\", {\n        username,\n        password,\n      });\n      let { userId } = response.data;\n      localStorage.setItem(\"userId\", userId);\n      props.history.push(\"/home\");\n    } catch (err) {\n      console.error(err);\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"login container\">\n      <h3 className=\"heading\">Login</h3>\n      {isError && (\n        <div className=\"error-alert alert\">Invalid username or password</div>\n      )}\n      <form className=\"login-form\" onSubmit={(e) => submitHandler(e)}>\n        <div className=\"form-field\">\n          <TextField\n            id=\"username\"\n            label=\"Username\"\n            variant=\"outlined\"\n            type=\"text\"\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-field\">\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-button\">\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Login\n          </Button>\n        </div>\n      </form>\n      <div className=\"signup-block\">\n        <p>Not registered user?</p>\n        <span\n          className=\"link\"\n          onClick={() => {\n            props.history.push(\"/signup\");\n          }}\n        >\n          Signup\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n\nfunction UserForm(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState({\n    addressLine1: \"\",\n    addressLine2: \"\",\n    city: \"\",\n    state: \"\",\n    pincode: \"\",\n  });\n  const [profilePicture, setProfilePicture] = useState(\"\");\n  const [profilePictureVersion, setProfilePictureVersion] = useState(0);\n\n  const [isError, setError] = useState(false);\n  const [isFormIncomplete, setFormIncomplete] = useState(false);\n  const [formValidationMessage, setFormValidationMessage] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n\n  const { user, userImage, setEdit, setProfileImage, isSignup } = props;\n  let userId = localStorage.getItem(\"userId\");\n\n  useEffect(() => {\n    if (userImage) {\n      setImage(userImage);\n    }\n\n    if (!isSignup) {\n      setUsername(user.username);\n      setPassword(user.password);\n      setFirstname(user.firstname);\n      setLastname(user.lastname);\n      setAge(user.age);\n      setPhone(user.phone);\n      setProfilePicture(user.profilePicture);\n      setProfilePictureVersion(user.profilePictureVersion);\n      setAddress({\n        addressLine1: user.address.addressLine1,\n        addressLine2: user.address.addressLine2,\n        city: user.address.city,\n        state: user.address.state,\n        pincode: user.address.pincode,\n      });\n    }\n  }, []);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setError(false);\n    setFormIncomplete(false);\n    try {\n      if (\n        username !== \"\" &&\n        firstname !== \"\" &&\n        lastname !== \"\" &&\n        age !== \"\" &&\n        phone !== \"\" &&\n        profilePicture !== \"\"\n      ) {\n        if (isSignup) {\n          await axios.post(\"api/signup\", {\n            username,\n            password,\n            firstname,\n            lastname,\n            age,\n            phone,\n            address,\n            profilePicture,\n            profilePictureVersion,\n          });\n          history.push(\"/login\");\n        } else {\n          console.log(\"update\");\n          let response = await axios.patch(\"api/user\", {\n            userId,\n            username,\n            password,\n            firstname,\n            lastname,\n            age,\n            phone,\n            address,\n            profilePicture,\n            profilePictureVersion,\n          });\n          console.log(response);\n          let updatedUser = JSON.parse(response.config.data);\n          //setUser(updatedUser);\n\n          props.updateUser(updatedUser);\n\n          let imageResponse = await axios.get(\n            `/api/user/${updatedUser.userId}/${updatedUser.profilePictureVersion}/${updatedUser.profilePicture}`,\n            { responseType: \"blob\" }\n          );\n          setProfileImage(URL.createObjectURL(imageResponse.data));\n          setEdit(false);\n          history.push(\"/home\");\n        }\n      } else {\n        setFormIncomplete(true);\n        setFormValidationMessage(\n          \"Please fill all fields and upload profile picture\"\n        );\n      }\n    } catch (err) {\n      console.error(err);\n      setError(true);\n    }\n  };\n\n  const onFileUpload = async () => {\n    // Create an object of formData\n    const formData = new FormData();\n\n    console.log(\"file:\", file);\n\n    if (file) {\n      // Update the formData object\n      formData.append(\"profilePicture\", file, file.name);\n\n      // Request made to the backend api\n      // Send formData object\n      let response = await axios.post(\"api/upload/profilePicture\", formData);\n      setProfilePicture(response.data.filename);\n      console.log(\"profilePicture:\", profilePicture);\n    }\n  };\n\n  // On file select (from the pop up)\n  const onFileChange = (event) => {\n    // Update the state\n    console.log(\"file changed\");\n    setFile(event.target.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n  };\n\n  const setAddressFields = (e) => {\n    setAddress({ ...address, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      {isError && (\n        <div className=\"error-alert alert\">Technical Error occured!</div>\n      )}\n      {isFormIncomplete && (\n        <div className=\"error-alert alert\">{formValidationMessage}</div>\n      )}\n      <form className=\"signup-form\">\n        <div className=\"profile-picture-container\">\n          <label htmlFor=\"profile-picture\">\n            <input\n              id=\"profile-picture\"\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={onFileChange}\n            />\n\n            <Avatar\n              src={image}\n              style={{ height: \"100px\", width: \"100px\" }}\n            ></Avatar>\n          </label>\n          <br />\n\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"button\"\n            onClick={onFileUpload}\n          >\n            Upload Photo\n          </Button>\n        </div>\n        <div className=\"form-fields\">\n          <div className=\"form-field\">\n            <TextField\n              id=\"username\"\n              label=\"Username\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-field\">\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"firstname\"\n              label=\"Firstname\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={firstname}\n              onChange={(e) => {\n                setFirstname(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"lastname\"\n              label=\"Lastname\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={lastname}\n              onChange={(e) => {\n                setLastname(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"age\"\n              label=\"Age\"\n              variant=\"outlined\"\n              inputMode=\"numeric\"\n              value={age}\n              onChange={(e) => {\n                setAge(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"phone\"\n              label=\"Phone\"\n              variant=\"outlined\"\n              inputMode=\"numeric\"\n              value={phone}\n              onChange={(e) => {\n                setPhone(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"addressLine1\"\n              name=\"addressLine1\"\n              label=\"AddressLine1\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={address.addressLine1}\n              onChange={(e) => {\n                setAddressFields(e);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"addressLine2\"\n              name=\"addressLine2\"\n              label=\"AddressLine2\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={address.addressLine2}\n              onChange={(e) => {\n                setAddressFields(e);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"city\"\n              name=\"city\"\n              label=\"City\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={address.city}\n              onChange={(e) => {\n                setAddressFields(e);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"state\"\n              name=\"state\"\n              label=\"State\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={address.state}\n              onChange={(e) => {\n                setAddressFields(e);\n              }}\n            />\n          </div>\n\n          <div className=\"form-field\">\n            <TextField\n              id=\"pincode\"\n              name=\"pincode\"\n              label=\"Pincode\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={address.pincode}\n              onChange={(e) => {\n                setAddressFields(e);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"sign-up-button\">\n          <div className=\"form-button\">\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={submitHandler}\n            >\n              {isSignup && \"Signup\"}\n              {!isSignup && \"Update\"}\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (user) => dispatch({ type: \"UPDATE_USER\", payload: user }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\n","import React from \"react\";\n\nimport \"./css/main.css\";\nimport UserForm from \"./UserForm\";\n\nfunction Signup(props) {\n  return (\n    <div className=\"signup-container container\">\n      <h3 className=\"heading\">Signup</h3>\n      <p>\n        Already a registered user?&nbsp;\n        <span\n          className=\"link\"\n          onClick={() => {\n            props.history.push(\"/login\");\n          }}\n        >\n          Login\n        </span>\n      </p>\n      <UserForm isSignup={true} />\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport axios from \"axios\";\nimport UserForm from \"./UserForm\";\nimport { connect } from \"react-redux\";\n\nfunction Profile(props) {\n  let userId = localStorage.getItem(\"userId\");\n\n  const { user, updateUser } = props;\n  const [image, setImage] = useState(null);\n  const [edit, setEdit] = useState(false);\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const fetchUser = async () => {\n    if (userId) {\n      let response = await axios.get(`/api/user/${userId}`);\n      console.log(response.data);\n      updateUser(response.data);\n\n      let imageResponse = await axios.get(\n        `/api/user/${response.data._id}/${response.data.profilePictureVersion}/${response.data.profilePicture}`,\n        { responseType: \"blob\" }\n      );\n      setImage(URL.createObjectURL(imageResponse.data));\n    }\n  };\n\n  if (!userId) {\n    props.history.push(\"/login\");\n    return null;\n  } else {\n    return (\n      <div className=\"profile-container container\">\n        <h3 className=\"heading\">Profile</h3>\n        {!edit && (\n          <span\n            className=\"link edit\"\n            onClick={() => {\n              setEdit(true);\n            }}\n          >\n            Edit Profile\n          </span>\n        )}\n        <span\n          className=\"link logout\"\n          onClick={() => {\n            localStorage.removeItem(\"userId\");\n            props.history.push(\"/login\");\n          }}\n        >\n          Logout\n        </span>\n        {!edit && (\n          <div className=\"user-profile\">\n            <div className=\"user-profile-picture\">\n              <Avatar\n                src={image}\n                style={{ height: \"100px\", width: \"100px\" }}\n              ></Avatar>\n            </div>\n            <div className=\"user-info\">\n              <div className=\"username\">\n                <label htmlFor=\"username\">Username:</label>\n                <p id=\"username\">{user.username}</p>\n              </div>\n              <div className=\"firstname\">\n                <label htmlFor=\"firstname\">Firstname:</label>\n                <p id=\"firstname\">{user.firstname}</p>\n              </div>\n              <div className=\"lastname\">\n                <label htmlFor=\"lastname\">Lastname:</label>\n                <p id=\"lastname\">{user.lastname}</p>\n              </div>\n              <div className=\"age\">\n                <label htmlFor=\"age\">Age:</label>\n                <p id=\"age\">{user.age}</p>\n              </div>\n              <div className=\"phone\">\n                <label htmlFor=\"phone\">Phone:</label>\n                <p id=\"phone\">{user.phone}</p>\n              </div>\n              <div className=\"address\">\n                <label htmlFor=\"address\">Address:</label>\n                <p id=\"address\">\n                  {user.address &&\n                    `${user.address.addressLine1}, ${user.address.addressLine2}, ${user.address.city}, ${user.address.state}, Pincode - ${user.address.pincode}`}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        {edit && (\n          <UserForm\n            user={user}\n            userImage={image}\n            setEdit={setEdit}\n            setProfileImage={setImage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    updateUser: (user) => {\n      return dispatch({ type: \"UPDATE_USER\", payload: user });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import \"./App.css\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Profile from \"./components/Profile\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/home\" component={Profile} />\n          <Route path=\"/\" component={Login} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  userId: \"\",\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  age: \"\",\n  phone: \"\",\n  address: {\n    addressLine1: \"\",\n    addressLine2: \"\",\n    city: \"\",\n    state: \"\",\n    pincode: \"\",\n  },\n  profilePicture: \"\",\n  profilePictureVersion: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  let newState = { ...state };\n\n  if (action.type === \"UPDATE_USER\") {\n    newState = action.payload;\n  }\n\n  return newState;\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducer from \"./components/reducer/reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}